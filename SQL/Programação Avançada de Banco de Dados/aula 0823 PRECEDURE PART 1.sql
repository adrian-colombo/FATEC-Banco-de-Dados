DECLARE
    V_ID NUMBER(3);
    V_FIRST_NAME HR.EMPLOYEES.FIRST_NAME%TYPE;
    V_EMAIL HR.EMPLOYEES.EMAIL%TYPE;

BEGIN

    V_ID := 107
    SELECT FIRST_NAME, EMAIL INTO V_FIRST_NAME, V_EMAIL FROM HR.EMPLOYEES WHERE EMPLOYEE_ID = V_ID;

    DBMS_OUTPUT.PUT_LINE('O NOME DO FUNCIONÁRIO É: ' || V_FIRST_NAME);
    DBMS_OUTPUT.PUT_LINE('O EMAIL DO FUNCIONÁRIO É: ' || V_EMAIL);

END;


---------------------------------------------------------------
CREATE OR REPLACE PROCEDURE PROC_RETORNANOMEFUNC(P_ID IN NUMBER, P_NOME OUT HR.EMPLOYEES.FIRST_NAME%TYPE)
IS
    V_FIRST_NAME HR.EMPLOYEES.FIRST_NAME%TYPE;
    V_EMAIL HR.EMPLOYEES.EMAIL%TYPE;

BEGIN

    SELECT FIRST_NAME, EMAIL INTO V_FIRST_NAME, V_EMAIL FROM HR.EMPLOYEES WHERE EMPLOYEE_ID = P_ID;

P_NOME := V_FIRST_NAME;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('OCORREU UM ERRO: ' || SQLERRM);

END;
---------------------------------------------------------------

CREATE OR REPLACE 
PROCEDURE PROC_RETORNANOMEFUNC(P_ID IN NUMBER, P_NOME OUT HR.EMPLOYEES.FIRST_NAME%TYPE)
IS
    V_FIRST_NAME HR.EMPLOYEES.FIRST_NAME%TYPE;
    V_EMAIL HR.EMPLOYEES.EMAIL%TYPE;
    V_QTDE NUMBER(1);
BEGIN

    SELECT COUNT(*) INTO V_QTDE FROM HR.EMPLOYEES WHERE EMPLOYEE_ID = P_ID;

    IF V_QTDE = 1 THEN
        SELECT FIRST_NAME, EMAIL INTO V_FIRST_NAME, V_EMAIL FROM HR.EMPLOYEES WHERE EMPLOYEE_ID = P_ID;
        P_NOME := V_FIRST_NAME;
    ELSE 
        P_NOME := NULL;
    END IF;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('CÓDIGO DO ERRO: ' || SQLCODE);
        DBMS_OUTPUT.PUT_LINE('OCORREU UM ERRO: ' || SQLERRM);

END;

-------
DECLARE 
  V_RET HR.EMPLOYEES.FIRST_NAME%TYPE;
BEGIN
  PROC_RETORNANOMEFUNC(10700, V_RET);
  
  IF V_RET IS NULL THEN
    DBMS_OUTPUT.PUT_LINE('O FUNCIONÁRIO NÃO CADASTRADO');
  ELSE
    DBMS_OUTPUT.PUT_LINE('RESULTADO: ' || V_RET);
  END IF;
END;

---------------------------------------------------------------